---
openapi: 3.0.3
info:
  title: CatalogoPD
  description: SwitchPagoDirecto RESTful API. Este microservicio permite consultar
    el catálogo de entidades de Pago Directo por Cuentas o Tarjetas.
  version: 1.0.0-SNAPSHOT
paths:
  /catalogopd/obtenerCatalogoPagoDirectoCuenta:
    post:
      tags:
      - Switch Pago Directo Resource
      summary: Obtiene catalogo de pago directo para transferencias entre cuentas.
      operationId: obtenerCatalogoPagoDirectoCuenta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObtenerCatalogoPagoDirectoCuentaRequest'
      responses:
        "200":
          description: "OK, información obtenida"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObtenerCatalogoPagoDirectoCuentaResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /catalogopd/obtenerCatalogoPagoDirectoTarjeta:
    post:
      tags:
      - Switch Pago Directo Resource
      summary: Obtiene catalogo de pago directo para pagos de tarjetas.
      operationId: obtenerCatalogoPagoDirectoTarjeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObtenerCatalogoPagoDirectoTarjetaRequest'
      responses:
        "200":
          description: "OK, información obtenida"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObtenerCatalogoPagoDirectoTarjetaResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /catalogopd/obtenerPagoDirectoParametros:
    post:
      tags:
      - Switch Pago Directo Resource
      summary: Obtiene parámetros de validación de pago directo para transferencias
        entre cuentas.
      operationId: obtenerPagoDirectoParametros
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObtenerPagoDirectoParametrosRequest'
      responses:
        "200":
          description: "OK, información de parámetros obtenida"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObtenerPagoDirectoParametrosResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /catalogopd/q/health:
    summary: MicroProfile Health provides a way for your application to distribute
      information about its healthiness state to state whether or not it is able to
      function properly
    description: MicroProfile Health Endpoint
    get:
      tags:
      - MicroProfile Health
      summary: "An aggregated view of the Liveness, Readiness and Startup of this\
        \ application"
      description: Check the health of the application
      operationId: microprofile_health_root
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /catalogopd/q/health/live:
    summary: Liveness checks are utilized to tell whether the application should be
      restarted
    description: MicroProfile Health - Liveness Endpoint
    get:
      tags:
      - MicroProfile Health
      summary: The Liveness check of this application
      description: Check the liveness of the application
      operationId: microprofile_health_liveness
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /catalogopd/q/health/ready:
    summary: Readiness checks are used to tell whether the application is able to
      process requests
    description: MicroProfile Health - Readiness Endpoint
    get:
      tags:
      - MicroProfile Health
      summary: The Readiness check of this application
      description: Check the readiness of the application
      operationId: microprofile_health_readiness
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /catalogopd/q/health/started:
    summary: Startup checks are an used to tell when the application has started
    description: MicroProfile Health - Startup Endpoint
    get:
      tags:
      - MicroProfile Health
      summary: The Startup check of this application
      description: Check the startup of the application
      operationId: microprofile_health_startup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
components:
  schemas:
    ApiResponse:
      required:
      - codigo
      - estado
      - mensaje
      type: object
      properties:
        codigo:
          description: "Código de la respuesta, donde \"0\" indica que la operació\
            n se completó con éxito."
          type: string
        estado:
          description: Indica la frase del código de estado HTTP
          type: string
        mensaje:
          description: Mensaje de la respuesta
          type: string
        resultado:
          description: Resultado de la operación
          type: object
    ObtenerCatalogoPagoDirectoCuentaRequest:
      type: object
      properties:
        tipo:
          description: Tipo
          pattern: \S
          type: string
          example: AAA
    ObtenerCatalogoPagoDirectoCuentaResponse:
      required:
      - codigo
      - estado
      - mensaje
      type: object
      properties:
        codigo:
          description: "Código de la respuesta, donde \"0\" indica que la operació\
            n se completó con éxito."
          type: string
        estado:
          description: Indica la frase del código de estado HTTP
          type: string
        mensaje:
          description: Mensaje de la respuesta
          type: string
        resultado:
          description: Resultado de la operación
          type: array
          items:
            $ref: '#/components/schemas/ObtenerCatalogoPagoDirectoCuentaResult'
    ObtenerCatalogoPagoDirectoCuentaResult:
      required:
      - codigoBanco
      - codigoHomologado
      - pagoDirecto
      type: object
      properties:
        codigoBanco:
          description: Código de Banco
          type: string
          example: "000"
        codigoHomologado:
          description: Código Homologado del Banco
          type: string
          example: "0000"
        pagoDirecto:
          description: Tiene Pago Directo
          type: string
          example: S/N
    ObtenerCatalogoPagoDirectoTarjetaRequest:
      type: object
      properties:
        tipo:
          description: tipo
          pattern: \S
          type: string
          example: AAA
        codigoBanco:
          description: Código Banco
          pattern: \S
          type: string
          example: "000"
    ObtenerCatalogoPagoDirectoTarjetaResponse:
      required:
      - codigo
      - estado
      - mensaje
      type: object
      properties:
        codigo:
          description: "Código de la respuesta, donde \"0\" indica que la operació\
            n se completó con éxito."
          type: string
        estado:
          description: Indica la frase del código de estado HTTP
          type: string
        mensaje:
          description: Mensaje de la respuesta
          type: string
        resultado:
          description: Resultado de la operación
          type: object
          allOf:
          - $ref: '#/components/schemas/ObtenerCatalogoPagoDirectoTarjetaResult'
    ObtenerCatalogoPagoDirectoTarjetaResult:
      required:
      - nombreBanco
      - codigoHomologado
      - pagoDirecto
      type: object
      properties:
        nombreBanco:
          description: Nombre del Banco
          type: string
          example: NOMBRE DE BANCO
        codigoHomologado:
          description: Código Homologado
          type: string
          example: "0000"
        pagoDirecto:
          description: Tiene Pago Directo para tarjetas
          type: string
          example: S o N
    ObtenerPagoDirectoParametrosRequest:
      type: object
      properties:
        parametro:
          description: Código parámetro
          pattern: \S
          type: string
          example: HORATOPEPGD
    ObtenerPagoDirectoParametrosResponse:
      required:
      - codigo
      - estado
      - mensaje
      type: object
      properties:
        codigo:
          description: "Código de la respuesta, donde \"0\" indica que la operació\
            n se completó con éxito."
          type: string
        estado:
          description: Indica la frase del código de estado HTTP
          type: string
        mensaje:
          description: Mensaje de la respuesta
          type: string
        resultado:
          description: Resultado de la operación
          type: object
          allOf:
          - $ref: '#/components/schemas/ObtenerPagoDirectoParametrosResult'
    ObtenerPagoDirectoParametrosResult:
      required:
      - valor
      - montoMinimo
      - montoMaximo
      - valorHoraDesde
      - valorHoraHasta
      type: object
      properties:
        valor:
          description: Valor del parámetro
          type: string
          example: 06:00-22:00
        montoMinimo:
          format: double
          description: Monto mínimo del valor del parámetro
          type: number
          example: 0.0
        montoMaximo:
          format: double
          description: Monto máximo del valor del parámetro
          type: number
          example: 0.0
        valorHoraDesde:
          description: Valor hora desde del Valor del parámetro
          type: string
          example: 06:00
        valorHoraHasta:
          description: Valor hora hasta del Valor del parámetro
          type: string
          example: 22:00
    HealthCheckResponse:
      type: object
      properties:
        data:
          type: object
          nullable: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/HealthCheckStatus'
    HealthCheckStatus:
      enum:
      - DOWN
      - UP
      type: string
